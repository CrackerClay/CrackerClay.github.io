<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[这是一个标题]]></title>
    <url>%2F2019%2F01%2F01%2FV2Ray%2F</url>
    <content type="text"><![CDATA[[TOC] 借鉴：https://www.flyzy2005.com/v2ray/how-to-build-v2ray/ 脚本一键搭建 安装 wget Centos执行这个： yum -y install wget Ubuntu/Debian执行这个： apt-get -y install wget V2Ray官方提供(安装更新)：https://install.direct/go.sh flyzyz封装校验防火墙：https://raw.githubusercontent.com/flyzy2005/ss-fly/master/v2ray.sh 下列俩种方式均可执行安装： wget 下载 -&gt; chmod +x 赋予执行权限 -&gt; ./[name].sh 执行 bash &lt;(curl -L -s https://install.direct/go.sh) 常用命令 /usr/bin/v2ray/v2ray：V2Ray 程序 /usr/bin/v2ray/v2ctl：V2Ray 工具 /etc/v2ray/config.json：配置文件 /usr/bin/v2ray/geoip.dat：IP 数据文件 /usr/bin/v2ray/geosite.dat：域名数据文件 12345678910service v2ray start|stop|status|reload|restart|force-reload# 启动service v2ray start# 停止service v2ray stop# 状态service v2ray status 配置V2Ray服务器 将生成的JSON配置放入配置文件(/etc/v2ray/config.json)中，不存在则创建该文件 配置文件：/etc/v2ray/config.json V2Ray配置在线生成器：https://intmainreturn0.com/v2ray-config-gen/ V2Ray配置工具：https://github.com/mili-tan/mV2RayConfig 取消勾选是否是动态端口 取消勾选是否是mKCP协议 uuid是用于识别用户的，服务端与客户端要一致 ==生成的JSON替换配置文件后启动服务即可== 附服务端配置： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&#123; "log": &#123; "access": "/var/log/v2ray/access.log", "error": "/var/log/v2ray/error.log", "loglevel": "warning" &#125;, "inbound": &#123; "port": 12345, "protocol": "vmess", "settings": &#123; "clients": [ &#123; "id": "1aac2381-86b8-1e24-890f-51c8c544ec5a", "level": 1, "alterId": 100 &#125; ] &#125; &#125;, "outbound": &#123; "protocol": "freedom", "settings": &#123;&#125; &#125;, "inboundDetour": [], "outboundDetour": [ &#123; "protocol": "blackhole", "settings": &#123;&#125;, "tag": "blocked" &#125; ], "routing": &#123; "strategy": "rules", "settings": &#123; "rules": [ &#123; "type": "field", "ip": [ "0.0.0.0/8", "10.0.0.0/8", "100.64.0.0/10", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.0.0.0/24", "192.0.2.0/24", "192.168.0.0/16", "198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "::1/128", "fc00::/7", "fe80::/10" ], "outboundTag": "blocked" &#125; ] &#125; &#125;&#125; 配置V2Ray客户端 客户端配置文件config.json V2Ray客户端下载：https://github.com/v2ray/v2ray-core/releases V2Ray配置在线生成器：https://intmainreturn0.com/v2ray-config-gen/ inbound.port 本地开放连接上VPS的端口，建议大于1024 outbound.settings.vnext[i].address VPS地址(服务器) outbound.settings.vnext[i].port 服务端暴露的端口 outbound.settings.vnext[i].user[j].id 与服务端JSON配置的uuid ==修改配置文件后即可连接服务== 注意防火墙开放端口连接，比如这里配置的是：12345 开启后google要访问外网还需借助代理工具 附客户端配置： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798&#123; "log": &#123; "loglevel": "warning" &#125;, "inbound": &#123; "listen": "127.0.0.1", "port": 61549, "protocol": "socks", "settings": &#123; "auth": "noauth", "udp": true, "ip": "127.0.0.1" &#125; &#125;, "outbound": &#123; "protocol": "vmess", "settings": &#123; "vnext": [ &#123; "address": "104.224.137.146", "port": 12345, "users": [ &#123; "id": "1aac2381-86b8-1e24-890f-51c8c544ec5a", "level": 1, "alterId": 100 &#125; ] &#125; ] &#125; &#125;, "outboundDetour": [ &#123; "protocol": "freedom", "settings": &#123;&#125;, "tag": "direct" &#125; ], "routing": &#123; "strategy": "rules", "settings": &#123; "rules": [ &#123; "type": "field", "port": "54-79", "outboundTag": "direct" &#125;, &#123; "type": "field", "port": "81-442", "outboundTag": "direct" &#125;, &#123; "type": "field", "port": "444-65535", "outboundTag": "direct" &#125;, &#123; "type": "field", "domain": [ "gc.kis.scr.kaspersky-labs.com" ], "outboundTag": "direct" &#125;, &#123; "type": "chinasites", "outboundTag": "direct" &#125;, &#123; "type": "field", "ip": [ "0.0.0.0/8", "10.0.0.0/8", "100.64.0.0/10", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.0.0.0/24", "192.0.2.0/24", "192.168.0.0/16", "198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "::1/128", "fc00::/7", "fe80::/10" ], "outboundTag": "direct" &#125;, &#123; "type": "chinaip", "outboundTag": "direct" &#125; ] &#125; &#125;&#125; V2Ray的优化谷歌的BBR加速所有，一键开启方式： 12# 下载 授权 执行 一键搞定wget https://raw.githubusercontent.com/flyzy2005/ss-fly/master/ss-fly.sh &amp;&amp; chmod +x ss-fly.sh &amp;&amp; ./ss-fly.sh -bbr 锐速，BBR，BBR魔改 https://www.7colorblog.com/?id=18 12345678# 下载wget -N --no-check-certificate "https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"# 授权执行chmod +x tcp.sh# 执行./tcp.sh 使用V2Ray上网Google浏览器利用Proxy SwitchyOmega代理工具 下载地址：https://proxy-switchyomega.com/download/ 备用下载：https://github.com/FelisCatus/SwitchyOmega/releases 配置说明 1&gt; 导入/导出 -&gt; 在线恢复 -&gt; 输入：https://raw.githubusercontent.com/wiki/FelisCatus/SwitchyOmega/GFWList.bak 2&gt; 点击恢复按钮后，自动加载场景。 3&gt; 选择”GFWed场景” 代理协议：SOCKS5 代理服务器：127.0.0.1 代理端口：61549 填写配置中的 inbound.port 本地端口]]></content>
      <categories>
        <category>分类1</category>
      </categories>
      <tags>
        <tag>标签1</tag>
        <tag>标签2</tag>
      </tags>
  </entry>
</search>
